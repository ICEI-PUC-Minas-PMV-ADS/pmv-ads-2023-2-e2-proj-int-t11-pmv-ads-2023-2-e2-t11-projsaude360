// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoSaude360.Models;

#nullable disable

namespace ProjetoSaude360.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231212033654_CorreçãoTabelaConsultas")]
    partial class CorreçãoTabelaConsultas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjetoSaude360.Models.Cadastro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Telefone")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Cadastros");
                });

            modelBuilder.Entity("ProjetoSaude360.Models.Consulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CadastrosId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataConsulta")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("MotivoConsulta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeMedico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recomendacoes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CadastrosId");

                    b.ToTable("Consultas");
                });

            modelBuilder.Entity("ProjetoSaude360.Models.Medicamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CadastrosId")
                        .HasColumnType("int");

                    b.Property<string>("Dosagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TratamentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CadastrosId");

                    b.HasIndex("TratamentoId");

                    b.ToTable("Medicamentos");
                });

            modelBuilder.Entity("ProjetoSaude360.Models.Tratamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Administracao")
                        .HasColumnType("int");

                    b.Property<int?>("CadastroId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Dosagem")
                        .HasColumnType("float");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CadastroId");

                    b.ToTable("Tratamentos");
                });

            modelBuilder.Entity("ProjetoSaude360.Models.Consulta", b =>
                {
                    b.HasOne("ProjetoSaude360.Models.Cadastro", "Cadastros")
                        .WithMany("Consultas")
                        .HasForeignKey("CadastrosId");

                    b.Navigation("Cadastros");
                });

            modelBuilder.Entity("ProjetoSaude360.Models.Medicamento", b =>
                {
                    b.HasOne("ProjetoSaude360.Models.Cadastro", "Cadastros")
                        .WithMany("Medicamentos")
                        .HasForeignKey("CadastrosId");

                    b.HasOne("ProjetoSaude360.Models.Tratamento", "Tratamento")
                        .WithMany("Medicamentos")
                        .HasForeignKey("TratamentoId");

                    b.Navigation("Cadastros");

                    b.Navigation("Tratamento");
                });

            modelBuilder.Entity("ProjetoSaude360.Models.Tratamento", b =>
                {
                    b.HasOne("ProjetoSaude360.Models.Cadastro", "Cadastro")
                        .WithMany("Tratamentos")
                        .HasForeignKey("CadastroId");

                    b.Navigation("Cadastro");
                });

            modelBuilder.Entity("ProjetoSaude360.Models.Cadastro", b =>
                {
                    b.Navigation("Consultas");

                    b.Navigation("Medicamentos");

                    b.Navigation("Tratamentos");
                });

            modelBuilder.Entity("ProjetoSaude360.Models.Tratamento", b =>
                {
                    b.Navigation("Medicamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
